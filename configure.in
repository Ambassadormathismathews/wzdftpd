#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.


PACKAGE=wzdftpd
VERSION=0.1rc4

# Choose one and only one of the following
#WZD_MULTIPROCESS=1
#WZD_MULTITHREAD=1

# Uncomment if you prefer sfv checker compiled in the exe
# + reduces the number of files
# - cannot be reloaded dynamically
#
# NOTE : as an evidence, it would be _stupid_ to enable internal sfv and
#   sfv module at the same time, so check your .cfg ...
#INTERNAL_SFV=1


AC_PREREQ(2.57)
AC_INIT(PACKAGE, VERSION, chifflier@cpe.fr)
AC_CONFIG_SRCDIR([backends/plaintext/libplaintext_main.c])
AM_INIT_AUTOMAKE(wzdftpd,0.1rc4,no-define)
AM_CONFIG_HEADER([config.h])

# Checks for programs.
CFLAGS=""
AC_PROG_CC
AM_PROG_LEX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

AC_PROG_LIBTOOL

AC_CYGWIN

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_CHECK_TYPES(unsigned long long,,exit 1)
AC_CHECK_DECLS([sys_siglist])
AC_CHECK_HEADERS([sys/vfs.h pthread.h],,exit 1)

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_LSTAT
AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
AC_FUNC_MALLOC
AC_FUNC_MKTIME
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_UTIME_NULL
AC_FUNC_VPRINTF
AC_FUNC_WAIT3
AC_CHECK_FUNCS([getcwd gethostbyaddr gethostbyname gettimeofday inet_ntoa memmove memset mkdir regcomp rmdir select socket statfs strcasecmp strchr strdup strerror strncasecmp strpbrk strrchr strtol strtoul strtoull utime],,exit 1)

AC_CHECK_LIB(dl, dlopen,,exit 1)
AC_CHECK_LIB(pthread, pthread_create,,exit 1)

AC_MSG_CHECKING(whether to build in debug mode)

AC_ARG_ENABLE(debug, [  --enable-debug          enable debug mode],
    if eval "test x$enable_debug = xyes"; then
      AC_MSG_RESULT(yes)
      CPPFLAGS="$CPPFLAGS -g -O0 -DDEBUG"
    else
      CPPFLAGS="$CPPFLAGS -O3 -pipe"
      AC_MSG_RESULT(no)
    fi,
    CPPFLAGS="$CPPFLAGS -O3 -pipe"
    AC_MSG_RESULT(no)
)


AC_MSG_CHECKING(whether to build ssl support)

AC_ARG_ENABLE(ssl, [  --enable-ssl            enable ssl support],
    if eval "test x$enable_ssl = xyes"; then
      AC_MSG_RESULT(yes)
      [AC_CHECK_HEADERS([openssl/ssl.h],,AC_MSG_ERROR(missing openssl headers))]
      [AC_CHECK_LIB(ssl, SSL_library_init,,AC_MSG_ERROR(missing openssl libraries))]
      SSL_CPPFLAGS="-DSSL_SUPPORT"
      SSL_LDFLAGS="-lssl"
    else
      AC_MSG_RESULT(no)
    fi,
    AC_MSG_RESULT(no)
)

if eval "test x$CYGWIN = xyes"; then

AC_MSG_CHECKING(whether to enable winsock support)

AC_ARG_ENABLE(winsock, [  --enable-winsock        enable winsock support (win32 only)],
    if eval "test x$enable_winsock = xyes"; then
      AC_MSG_RESULT(yes)
      CPPFLAGS="$CPPFLAGS -DWINSOCK_SUPPORT"
      LDFLAGS="$LDFLAGS -lwsock32"
    else
      AC_MSG_RESULT(no)
    fi,
    AC_MSG_RESULT(no)
)

fi

BUILDNUM="`date +\"%Y%m%d\"`"

AC_SUBST(BUILDNUM)
AC_SUBST(SSL_CPPFLAGS)
AC_SUBST(SSL_LDFLAGS)
AC_SUBST(VERSION)

AC_CONFIG_FILES([Makefile
                 backends/Makefile
                 backends/plaintext/Makefile
                 doc/Makefile
                 modules/Makefile
                 modules/sfv/Makefile
                 modules/test/Makefile
                 src/Makefile
                 src/wzd.cfg
                 tools/Makefile
                 tools/siteuptime/Makefile
                 tools/sitewho/Makefile])
AC_OUTPUT
