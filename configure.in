#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.


# Choose one and only one of the following
#WZD_MULTIPROCESS=1
#WZD_MULTITHREAD=1

# Uncomment if you prefer sfv checker compiled in the exe
# + reduces the number of files
# - cannot be reloaded dynamically
#
# NOTE : as an evidence, it would be _stupid_ to enable internal sfv and
#   sfv module at the same time, so check your .cfg ...
#INTERNAL_SFV=1


AC_PREREQ(2.53)
AC_INIT(wzdftpd, 0.2cvs, pollux@wzdftpd.net)

#AC_CANONICAL_HOST

# having both commands will give warnings, but is necessary for BSD
AC_CANONICAL_TARGET
AC_CYGWIN

AM_INIT_AUTOMAKE(wzdftpd,0.2cvs,no-define)
# AC_CONFIG_SRCDIR([backends/plaintext/libplaintext_main.c])
AM_CONFIG_HEADER([config.h])

dnl helper macros
sinclude(ac-helpers/pgsql.m4)
sinclude(ac-helpers/tcl.m4)

AM_MAINTAINER_MODE

AH_TEMPLATE([HARD_USERLIMIT],
            [Defines the maximum number of users
             simultaneously connected.])

AC_ARG_VAR(HARD_USERLIMIT,[max number of simultaneous logins allowed])
if eval "test x$HARD_USERLIMIT = x"; then
  AC_DEFINE(HARD_USERLIMIT,128)
  HARD_USERLIMIT=128
else
  AC_DEFINE_UNQUOTED(HARD_USERLIMIT,$HARD_USERLIMIT)
fi

# Checks for programs.
CFLAGS=""
AC_PROG_CC
AM_PROG_LEX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl not building static libraries makes compilation fail on *bsd !
dnl AC_DISABLE_STATIC
if eval "test x$CYGWIN != xyes"; then
  CXX=no
  #F77=no
  #GCJ=no
fi
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_CHECK_TYPES(unsigned long long,,exit 1)
AC_CHECK_DECLS([sys_siglist])
AC_CHECK_HEADERS([pthread.h],,exit 1)

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_LSTAT
AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
AC_FUNC_MALLOC
AC_FUNC_MKTIME
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_UTIME_NULL
AC_FUNC_VPRINTF
AC_FUNC_WAIT3
AC_CHECK_FUNCS([getcwd gethostbyaddr gethostbyname gettimeofday inet_ntoa memmove memset mkdir realloc regcomp rmdir select socket statfs strcasecmp strchr strdup strerror strncasecmp strpbrk strrchr strtol strtoul utime],,exit 1)
AC_CHECK_FUNC(strptime,[AC_DEFINE(HAVE_STRPTIME)])
AC_CHECK_FUNC(strtok_r,[AC_DEFINE(HAVE_STRTOK_R)])
AC_CHECK_FUNC(strtoull,[AC_DEFINE(HAVE_STRTOULL)])
AC_CHECK_FUNC(getopt_long,[AC_DEFINE(HAVE_GETOPT)])
AC_CHECK_FUNCS([inet_ntop])

AC_CHECK_LIB(dl, dlopen,DL_FLAGS="-ldl",)
AC_CHECK_LIB(crypt, crypt,CRYPT_FLAGS="-lcrypt",)
ACX_PTHREAD(,exit 1)

WZD_LIB_PGSQL
WZD_LIB_TCL

# check for zlib (optional, used in module sfv)
AC_CHECK_LIB(z, inflateEnd, [zlib_cv_libz=yes], [zlib_cv_libz=no])
AC_CHECK_HEADER(zlib.h, [zlib_cv_zlib_h=yes], [zlib_cvs_zlib_h=no])
AC_MSG_CHECKING(zlib)
if test "$zlib_cv_libz" = "yes" -a "$zlib_cv_zlib_h" = "yes"
then
  #
  # If both library and header were found, use them
  #
  AC_MSG_RESULT(ok)
  AC_DEFINE(HAVE_ZLIB,1,"Define to 1 if you have the `zlib' library (-lz)")
else
  AC_MSG_RESULT(failed)
fi
AM_CONDITIONAL(USE_ZLIB, test "$zlib_cv_libz" = "yes" -a "$zlib_cv_zlib_h" = "yes")

# Build options string
WZD_BUILD_OPTS="threads"
COMMA=','

AC_MSG_CHECKING(whether to build in debug mode)

AC_ARG_ENABLE(debug, [  --enable-debug          enable debug mode],
    if eval "test x$enable_debug = xyes"; then
      AC_MSG_RESULT(yes)
      WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}debug"
      CPPFLAGS="$CPPFLAGS -g -O0 -DDEBUG"
    else
#      CPPFLAGS="$CPPFLAGS -O3 -pipe -fomit-frame-pointer -ffast-math"
      CPPFLAGS="$CPPFLAGS -O3 -pipe"
      AC_MSG_RESULT(no)
      WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}release"
    fi,
#    CPPFLAGS="$CPPFLAGS -O3 -pipe -fomit-frame-pointer -ffast-math"
    CPPFLAGS="$CPPFLAGS -O3 -pipe"
    AC_MSG_RESULT(no)
    WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}release"
)

if eval "test x$enable_debug = xyes"; then
  AM_WITH_MPATROL
fi

if eval "test x$CYGWIN = xyes"; then

AC_MSG_CHECKING(whether to enable winsock support)

AC_ARG_ENABLE(winsock, [  --enable-winsock        enable winsock support (win32 only) (default:yes)],
    if eval "test x$enable_winsock = xyes"; then
      AC_MSG_RESULT(yes)
      CPPFLAGS="$CPPFLAGS -DWINSOCK_SUPPORT"
      LDFLAGS="$LDFLAGS -lwsock32"
      WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}winsock"
    else
      AC_MSG_RESULT(no)
    fi,
    AC_MSG_RESULT(yes)
    CPPFLAGS="$CPPFLAGS -DWINSOCK_SUPPORT"
    LDFLAGS="$LDFLAGS -lwsock32"
    WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}winsock"
)

fi


AC_MSG_CHECKING(whether to build ssl support)

AC_ARG_ENABLE(ssl, [  --enable-ssl            enable ssl support],
  if eval "test x$enable_winsock = xyes"; then
    SSL_CPPFLAGS="-DSSL_SUPPORT"
    AC_MSG_RESULT(yes, with wrapper)
  else
    if eval "test x$enable_ssl = xyes"; then
      AC_MSG_RESULT(yes)
      [AC_CHECK_HEADERS([openssl/ssl.h],,AC_MSG_ERROR(missing openssl headers))]
      [AC_CHECK_LIB(ssl, SSL_library_init,,AC_MSG_ERROR(missing openssl libraries),"-lcrypto")]
      SSL_CPPFLAGS="-DSSL_SUPPORT"
      SSL_LDFLAGS="-lssl -lcrypto"
      WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}ssl"
    else
      AC_MSG_RESULT(no)
    fi
  fi,
  AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to build ipv6 support)

AC_ARG_ENABLE(ipv6, [  --enable-ipv6           enable ipv6 support (EXPERIMENTAL)],
    if eval "test x$enable_ipv6 = xyes"; then
      AC_MSG_RESULT(yes)
      CPPFLAGS="$CPPFLAGS -DIPV6_SUPPORT"
      WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}ipv6"
    else
      AC_MSG_RESULT(no)
    fi,
    AC_MSG_RESULT(no)
)


AM_CONDITIONAL(USE_ICC, test x$CC = xicc)
if eval "test x$CC = xicc"; then
  WZD_BUILD_OPTS="${WZD_BUILD_OPTS}${COMMA}icc"
  echo "Changing dependancy mode to match intel compiler"
  CCDEPMODE="depmode=gcc"
#  CPPFLAGS="$CPPFLAGS -I/usr/include"
fi

AC_DEFINE_UNQUOTED(WZD_BUILD_OPTS,"$WZD_BUILD_OPTS")

AH_TEMPLATE([WZD_BUILD_OPTS],
            [Build options.])
AH_TEMPLATE([HAVE_GETOPT],
            [System has the getopt_long function.])
AH_TEMPLATE([HAVE_STRPTIME],
            [System has the strptime function.])
AH_TEMPLATE([HAVE_STRTOK_R],
            [System has the strtok_r function.])
AH_TEMPLATE([HAVE_STRTOULL],
            [System has the strtoull function.])

BUILDNUM="`date +\"%Y%m%d\"`"

# 
#  --------- 
# ( moo moo )
#  --------- 
#         o   ^__^
#          o  (0_)\_______
#             (__)\       )\/\
#                 ||----w |
#                 ||     ||
# 
e_prefix=`echo $prefix | sed -e 's|NONE|/usr/local|'`
e_sysconfdir=`echo $sysconfdir | sed -e "s|\\${prefix}|$e_prefix|"`
e_datadir=`echo $datadir | sed -e "s|\\${prefix}|$e_prefix|"`

default_config=$e_sysconfdir/wzd.cfg
AC_DEFINE_UNQUOTED(WZD_DEFAULT_CONF,"$default_config")

AH_TEMPLATE([WZD_DEFAULT_CONF],
            [Default config file.])

AC_SUBST(e_prefix)
AC_SUBST(e_datadir)
AC_SUBST(e_sysconfdir)
AC_SUBST(BUILDNUM)
AC_SUBST(CRYPT_FLAGS)
AC_SUBST(DL_FLAGS)
AC_SUBST(PTHREAD_FLAGS)
AC_SUBST(SSL_CPPFLAGS)
AC_SUBST(SSL_LDFLAGS)
AC_SUBST(VERSION)
AC_SUBST(WZD_BUILD_OPTS)

AC_CONFIG_FILES([Makefile
                 ac-helpers/Makefile
                 backends/Makefile
                 backends/plaintext/Makefile
                 init.d/Makefile
                 init.d/wzdftpd
                 modules/Makefile
                 modules/sfv/Makefile
                 modules/test/Makefile
                 src/Makefile
                 src/wzd.cfg
                 tools/Makefile
                 tools/siteconfig/Makefile
                 tools/siteuptime/Makefile
                 tools/sitewho/Makefile])
AC_OUTPUT


if test x$CYGWIN = xyes; then
  echo "Patching libtool ! ..."
  sed -e 's/deplibs_check_method="file_magic \^x86 archive import|\^x86 DLL"/deplibs_check_method="file_magic ^x86 archive import|^x86 DLL|^x86 archive static"/' libtool > libtool2
#  sed -e 's|sed -e s/\^lib/cyg/| true |' libtool2 > libtool
#  rm -f libtool2
  mv libtool2 libtool
  echo "Patching default configuration ! ..."
  sed -e 's/lib\(.*\)\.so/cyg\1.dll/' src/wzd.cfg > src/wzd.cfg2
  mv src/wzd.cfg2 src/wzd.cfg
fi

