<chapter>
<title>Config file directives</title>

<sect1>
<title>General configuration</title>

<simplesect>
<title>IPs and ident</title>

<para>wzdftpd gives the possibility to check user identity on connection.</para>
<para>To disable this, just add '*' to the list of authorized ip's for user</para>

<para>Wildcards are accepted</para>

<para>There are 3 types of ip supported by wzdftpd, each with a different behaviour
<variablelist>

<varlistentry><term>numeric ip: xxx.xxx.xxx.xxx</term>
<listitem>
<para>This will store the current ip in the authorized list.
<screen>ip = 127.0.0.1</screen>
<screen>ip = 127.0.0.*</screen>
</para>
</listitem>
</varlistentry>

<varlistentry><term>hostname, resolved by ip: +host.domain.com</term>
<listitem>
<para>The name 'host.domain.com' will be converted to an ip and then compared
to the ip of the user.
<screen>ip = +hostname.domain.com</screen>
</para>
<para>With this syntax you <emphasis>can't</emphasis> use wildcards, as
it won't be accepted in the name resolution.</para>
<para><emphasis>IMPORTANT :</emphasis>DNS lookups can slow down connection !</para>
</listitem>
</varlistentry>

<varlistentry><term>hostname, resolved by name: -host.domain.com</term>
<listitem>
<para>The ip of the connected user will be converted to a name using a DNS
reverse lookup, and then compared to 'host.domain.com'.
<screen>ip = -*.nerim.net</screen>
<screen>ip = -hostname.domain.com</screen>
</para>
<para><emphasis>IMPORTANT :</emphasis>DNS lookups can slow down connection !</para>
</listitem>
</varlistentry>

</variablelist>
</para>

<para>When you specify an ip, it means all ident from this ip address are allowed.
If you want to restrict connection for a specific ident: just add 'ident@' in front
of the ip.
</para>
<screen>ip = ident@+host.domain.com</screen>
<para><emphasis>IMPORTANT: This option is DIFFERENT from other ftpd's</emphasis>
. Instead of specifying '*@ip'¸ just write the ip (wzdftpd understands the fact you
don't give any ident as an implicit authorization for all idents).
</para>

</simplesect>

<simplesect>
<title>Virtual File system (VFS)</title>

<para>wzdftpd offers the possibility to use virtual directories, also known as VFS.
A VFS is a kind of link between a non-existant directory (so-called
<emphasis>virtual</emphasis> directory) and an existing directory (so-called
<emphasis>physical</emphasis> directory). This allow, for example, to create a directory
whose contents is on another physical drive.
</para>
<screen>vfs = |/home/pollux/vfs|/etc|</screen>
<para>This will create a virtual directory 'vfs' in '/home/pollux', which will be
abolutely equivalent to '/etc'.</para>

<para>You can use restrictions on VFS, to allow only specified users to see and use them.
Note this is only the ability to see and use VFS, and does not affect permissions on
directories or files contained in VFS.</para>
<screen>vfs = |/home/pollux/vfs|/etc| +O =admin</screen>
<para>This will define the same VFS as precedently, restricted only to siteops (+O flag)
and members of the group 'admin' (=admin).</para>

<para>It would be fastidious to define VFS for all users and groups, for example.
To help you in this task, wzdftpd allows to use a small subset of cookies, to have
a kind of wildcards for users, groups, etc.</para>
<screen>vfs = |%userhome/etc|/etc| +O =admin</screen>
<para>This will create a virtual dir called 'etc' in the homedir of every siteop and
member of admin group, equivalent to /etc.</para>
<para>For the moment, supported cookies are <emphasis>username</emphasis>,
<emphasis>usergroup</emphasis>, and <emphasis>userhome</emphasis>.</para>

<para><emphasis>Note on performance:</emphasis> please note that VFS are emulated, and as so
you will suffer a small penalty on speed, compared to real directories.
This penalty will be increased if you use cookies.</para>

</simplesect>

<simplesect>
<title>Users and Groups</title>

<para>wzdftpd, unlike many other ftpd daemons, is very oriented on groups. The idea
is to create groups with specific properties, and make users belong
to several groups. It simplifies configuration, because instead of configuring
each user, you just have to configure groups. However, please remember that the first
group of a user is special (it is its main group).
</para>
<para>For example, setting the defaultpath in a group is specially important, because
it will be used as a default value each time you create a user. The default ratio
will also be taken from the group's ratio.</para>
<para>Also, do not forget that when a user is created, it has no default ip allowed.
If you authorize an ip for the group, it will be allowed for all users.</para>
<para>For users without specific idle time limit, the value of the group will be
checked. So, user value is needed only if different from group.</para>

</simplesect>

</sect1>

<sect1>
<title>Directives reference</title>
<variablelist>

<varlistentry id='cfg_backend'><term>backend (default: plaintext)</term>
<listitem>
<para>The backend to use for authentication and user/group management.
You can specify a test on the backend version if needed. See
<link linkend='gloss_backend'>the glossary</link> for explanation on what a
backend is.
<screen>backend = /path/to/libwzdplaintext.so</screen>
<screen>backend = /path/to/libwzdplaintext.so > 122</screen>
</para>
<para>In these two examples, backend will be name 'plaintext'</para>
<para>
You need <emphasis>at least</emphasis> one backend.
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_backend_param'><term>backend_param_... </term>
<listitem>
<para>If backend needs an argument, specify it here. The argument depend on
the backend used, see backend definition for details.
<screen>backend_param_plaintext = /path/to/users</screen>
</para>
<para>
This line must come <emphasis>after</emphasis> the definition of the backend.
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_cscript'><term>cscript</term>
<listitem>
<para>Custom scripts (or binaries) to be executed before/after
certain commands.
<screen>cscript = /path/to/exe</screen>
<screen>cscript = tcl:/path/to/script</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_deny_files_uploaded'><term>deny_files_uploaded (default:
0)</term>
<listitem>
<para>Specify 1 here to deny access to files during their upload.
<screen>deny_access_files_uploaded = 1</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_dir_message'><term>dir_message</term>
<listitem>
<para>When changing current directory, the server will look for this file, and
if present will append it to the end of the ftp reply.
<screen>dir_message = .message</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_dynamicip'><term>dynamic_ip (default: 0)</term>
<listitem>
<para>If you specify 1 ou an ip, the server will try to detect ip changes (e.g
ADSL disconnections).
<screen>dynamic_ip = 1</screen>
<screen>dynamic_ip = +xxx.myftp.org</screen>
</para>
<para>0 means the option is deactivated, 1 the server will ask the system to
find its ip, +ip the server will perform DNS lookups</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_force_shm_cleanup'><term>force_shm_cleanup (default:
0)</term>
<listitem>
<para>Specify 1 here to automatically try to delete shm zone if existing.
<screen>force_shm_cleanup = 1</screen>
</para>
<para><emphasis>IMPORTANT: This option is dangerous !</emphasis>. If you start server when
another instance is running, you'll certainly go into problems.</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_hide_dotted_files'><term>hide_dotted_files (default:
0)</term>
<listitem>
<para>Specify 1 here to hide files beginning with a dot ('.')
<screen>hide_dotted_files = 1</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_ip'><term>ip (default: *)</term>
<listitem>
<para>Specify server ip, to restrict server to a specific interface (usefull
mainly for server with multiples interfaces).
<screen>ip = *</screen>
<screen>ip = 127.0.0.1</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_logfile'><term>logfile (default: do not use log file)</term>
<listitem>
<para>Log file for server activity (see <link linkend='cfg_use_syslog'>
use_syslog</link>)
<screen>logfile = /path/to/wzd.log</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_loglevel'><term>loglevel (default: normal)</term>
<listitem>
<para>Controls the verbosity of the server in the log file.
<screen>loglevel = high</screen>
</para>
<para>This means only messages with a level <emphasis>greater or equal than
</emphasis> 'high' will be logged</para>
<para>level can be one of (in order): lowest, flood, info, normal, high,
critical</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_max_dl_speed'><term>max_dl_speed (default: 0)</term>
<listitem>
<para>Maximum cumulated (for all users connected) download speed in bytes/sec.
<screen>max_dl_speed = 300000</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_max_threads'><term>max_threads (default: 32)</term>
<listitem>
<para>The hard limit for child threads (clients connected simultaneously).
<screen>max_threads = 50</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_max_ul_speed'><term>max_ul_speed (default: 0)</term>
<listitem>
<para>Maximum cumulated (for all users connected) upload speed in bytes/sec.
<screen>max_ul_speed = 300000</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_pasv_high_range'><term>pasv_high_range (default: 65536)</term>
<listitem>
<para>The higher bound of ip range the server can take.
<screen>pasv_high_range = 3000</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_pasv_ip'><term>pasv_ip (default: *)</term>
<listitem>
<para>Specify passive ip.
<screen>pasv_ip = 64.xxx.xxx.xxx</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_pasv_low_range'><term>pasv_low_range (default: 1025)</term>
<listitem>
<para>The lower bound of ip range the server can take.
<screen>pasv_low_range = 2500</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_pid_file'><term>pid_file (default: /var/run/wzdftpd.pid)</term>
<listitem>
<para>File where pid of server will be stored. This is used by init.d scripts
to send signals to server.
<screen>pid_file = /path/to/wzdftpd.pid</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_port'><term>port (default: 21)</term>
<listitem>
<para>The port to listen.
<screen>port = 1321</screen>
</para>
<para><emphasis>IMPORTANT: under linux, you need privileges to bind to a system
port ( &lt; 1024 )</emphasis></para>
</listitem>
</varlistentry>

<varlistentry id='cfg_server_uid'><term>server_uid (default: none)</term>
<listitem>
<para>[Linux] Server will drop privileges and change its uid to server_uid
after binding port. This is usefull only if server is riunned by root
<screen>server_uid = toto</screen>
</para>
<para><emphasis>IMPORTANT: under linux, you need privileges to bind to a system
port ( &lt; 1024 )</emphasis></para>
</listitem>
</varlistentry>

<varlistentry id='cfg_shm_key'><term>shm_key (default: 0x1331c0d3)</term>
<listitem>
<para>Controls key used for shared memory zones.
<screen>shm_key = 0x2442c0d3</screen>
</para>
<para>This is used to run two or more servers on the same machine</para>
<para>Remember wzdftpd uses <emphasis>two</emphasis> shared memory zones,
shm_key and shm_key-1</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_site_cmd'><term>site_cmd</term>
<listitem>
<para>Custom site commands.
<screen>site_cmd = my_free /path/to/free.sh</screen>
<screen>site_cmd = my_tcl tcl:/path/to/script</screen>
</para>
<para>
This will define a new site command, "my_free".
</para>
<para><emphasis>
Do not forget to add a permission line, or your command will
not be accessible !
</emphasis></para>
</listitem>
</varlistentry>

<varlistentry id='cfg_use_syslog'><term>use_syslog (default: 1, except for
cygwin)</term>
<listitem>
<para>Use syslog to log server messages (see <link linkend='cfg_logfile'>
logfile</link>)
<screen>use_syslog = 1</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_tls_certificate'><term>tls_certificate [TLS only]</term>
<listitem>
<para>The name of the TLS certificate to use.
<screen>tls_certificate = /path/to/wzd.pem</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_tls_cipher_list'><term>tls_cipher_list (default: ALL) [TLS only]</term>
<listitem>
<para>The cipher list server will negotiate during TLS handshake
<screen>tls_cipher_list = ALL</screen>
</para>
<para>You should not use this option, or let "ALL", unless you know
what you are doing. </para>
<para>see openssl ciphers, man openssl(1)</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_tls_mode'><term>tls_mode (default: explicit) [TLS only]</term>
<listitem>
<para>Use implicit, explicit or explicit_strict mode
(see <link linkend='gloss_tls_mode'>tls modes for details</link>)
<screen>tls_mode = explicit</screen>
</para>
</listitem>
</varlistentry>

<varlistentry id='cfg_xferlog'><term>xferlog (default: do not log)</term>
<listitem>
<para>Log transferred files in common xferlog format (suitable for analysis
with classical tools).
<screen>xferlog = /path/to/xferlog</screen>
</para>
</listitem>
</varlistentry>


</variablelist>

</sect1>

</chapter>
