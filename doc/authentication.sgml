<!-- vi:tw=80
  -->
<chapter id='authentication'>
<title>Authentication</title>

<para>
wzdftpd supports several authentication methods, and all of them are common to
all backends. Some methods involves storing encrypted data on the server (crypt,
md5, sha), some rely on another authentication layer (pam), and some use
strongest authentication methods (certificates, and in the future kerberos
and/or radius and/or SASL).
</para>

<para>
This section explains which methods wzdftpd can use. The method is specified
when changin a password, see <link linkend='site_chpass'>site chpass</link>
command and <link linkend='passwords'>"passwords" chapter</link> for details.
</para>

<sect1 id='auth_crypt'>
<title>Crypt</title>

<para>
The default method is to store password in crypt() format, which is a variation of the
Data Encryption Standard algorithm (DES) with variations.
</para>

<para>
To use the crypt format, the password is stored in backend encrypted. The first two chars
constitute the salt (it is use to perturb the algorithm).
</para>

<para>
Passwords stored in crypt format are limited to 8 characters.
</para>

</sect1>

<sect1 id='auth_md5'>
<title>MD5</title>

<para>
Due to the limitations of the crypt format, and because it is a very common format on
linux systems, wzdftpd also supports the MD5 format.
</para>

<para>
To use the MD5 format, the password is stored with the special prefix "$1$".
The next characters (until "$") constitute the salt, and the remaining is
the encrypted password itself.
</para>

<para>
The MD5 format is used in the "shadow" file, for exemple. So you can just copy and paste
the encrypted password and it will work.
</para>

</sect1>

<sect1 id='auth_sha'>
<title>SHA</title>

<para>
The SHA (Secure Hash Algorithm) is a family of cryptographic hash functions. The
used function in wzdftpd is SHA-1, which is the commonly used function in SSL,
TLS, etc. SHA-1 is considered to be the successor to MD5.
</para>

<para>
To use the SHA-1 format, the password is stored with the special prefix "{SHA}".
</para>

<para>
Recently (feb and aug 2005), two attacks were published to find collisions in
SHA-1. This means that an attack is possible with a low complexity, compared to
a brute force attack. However, this does not mean that this algorithm can be
broken easily, only that finding a collision for SHA-1 is within reach of
massive distributed Internet search (are you that famous ?)
</para>

</sect1>

<sect1 id='auth_pam'>
<title>PAM (Pluggable Authentication Modules)</title>

<para>
If pam was detected on your system during compilation, wzdftpd can try to authenticate
to the PAM subsystem by sending the login and password.
</para>

<para>
To use the PAM method, set the password to "{pam}"
</para>

<para>To change a password, you have to specify the old password (this is needed
by PAM). Write the old password and the new password separated by a | (pipe)
character.
<programlisting>site chpass user {pam}oldpass|newpass
</programlisting>
</para>

<caution>
<para>When changing a password using the pam method, be advised that pam will
handle the password change, and that this will probably also mean changing it on
the system.
</para>
</caution>

</sect1>

<sect1 id='auth_cert'>
<title>SSL Certificates</title>

<para>
If the client is configurated to send a client certificate, the server can verify it
(you have to add the certificate authority in the config file, or the certificates
will be declared invalid).
</para>

<para>This is generally used when you have deployed a PKI (Public Key
Infrastructure), and/or a CA (Certificate Authority).
</para>

<para>wzdftpd checks if the client certificate is validated
(<emphasis>i.e</emphasis>, if the certificate has been signed by the server's
certificate authority), and then checks that the <emphasis>CN</emphasis> field
of the certificate is equal to the login name.
</para>

</sect1>

</chapter>

