## IN PROGRESS ##

- BUG when deleting a dir / file on top of a vfs, .dirinfo is not deleted in the correct dir
- rewrite fct do_mkdir
- SFV: trap EVENT_DELETE, and re-create .missing if file from sfv is deleted ?? (not sure it is a good idea ...)
- per dir global permissions (to pass over rootpath)
- LINUX: drop privileges after binding port
- lock files when writing (to avoid concurrent writes)
- VFS (virtual file system): system-wide vfs, group-wide vfs, or user vfs
- use options in ls
- hide some filenames in list: .dirinfo .dirmsg
- modify checkpath to return 0 if ok and file exists, 1 if !ok, -1 if file does not
  exist but path was converted
- wzd_misc.c: access to limiter should be thread-safe !
- bandwidth limit: add global limit / group limit
- perms: implement permissions on global commands like delete, mkdir, site ...
  these perms will complete per-user rights
  3 modes of perms: user/group/flag
- user/group: ALWAYS create a special user nobody and special group nogroup
- modify acls to accept groupnames (instead of users), or wildcards (*)


## PRIORITY ##

- Sub-vfs work, but need to put the physical path after the first node
  e.g:
   vfs = |/home/pollux/mp3|/cygdrive/e/sons/mp3|
   vfs = |/cygdrive/e/sons/mp3/pouet|/cygdrive/d/adobe|
- Load modules : .so + try to load win DLLs (using win API ...)
- cookies
- anti-hammering: per ip/user, ban time
- per-dir msg / default msg; SITE commands:
    * site DIRMSG new_msg
    * site APPENDMSG new_line
    * site CONVERTMSG filename
- add option to SITE SHUTDOWN, to kick (or not) users
- possibility to regroup txt files in 1
- hooks for events (on_file_upload, etc)
- external hooks for events (call external programs)
- ACL: ascendant recursion for permissions ? need to check if >= rootpath !
- bandwith limitations: global / group / user
    + possibility of relatives restrictions: 75g == 75 % of the group limit (for 1 user)
- implement permissions
- dir perms are useless now ?!
- finish implementation of ssl: explicit, port, data protection, buffer size
- give choice between hard/soft chroot


## NORMAL ##

- multiple binds / restricted binds: bind to only specified ip(s)
- change / add / remove vfs with site commands
- add detection of ip for dynamic ip
- 'include' directive in wzd.cfg: ability to split config file
- message system for users: site msg and/or inline messages
- add random in PASV port choose, to avoid always using the same
    will be REALLY usefull if we use fork()
_ possibility to link a backend statically (instead of dll)
- option : check certificate
- option : check CA for certificate
- option : check certificate only at login (not at port/pasv)

## I'LL THINK ABOUT IT ##

- mount several dir in one (only for download)
- rolling range of ips, with change date:
   e.g during one week use ip 1, then 1 week ip 2, etc.
- statistics
- quota per user/group
- ratio: per user/group, credit (time to re-add ?)
- add size limit for directories
- XCRC command
- sfv checker / sfv creation
- dupe checker
- default backend hard-coded ?
- per-dir special permissions (glftpd like)
- possibility to change user inline
- cache permissions in memory (parent-process shm zone ?)
