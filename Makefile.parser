# Parse options from Makefile.options.{defaults,local}
# and build the cmake command line
#
ifeq ($(NJOBS),)
NJOBS=1
endif

EXTRA_CMAKE_FLAGS += -DDEBUG=$(DEBUG)

EXTRA_CMAKE_FLAGS += -DWITH_PAM=$(WITH_PAM)
EXTRA_CMAKE_FLAGS += -DWITH_IPV6=$(WITH_IPV6)
EXTRA_CMAKE_FLAGS += -DWITH_UTF8=$(WITH_UTF8)

EXTRA_CMAKE_FLAGS += -DWITH_MySQL=$(WITH_MYSQL)
EXTRA_CMAKE_FLAGS += -DWITH_PostgreSQL=$(WITH_PGSQL)
EXTRA_CMAKE_FLAGS += -DWITH_SQLite3=$(WITH_SQLITE)

EXTRA_CMAKE_FLAGS += -DWITH_GnuTLS=$(WITH_GNUTLS)
EXTRA_CMAKE_FLAGS += -DWITH_OpenSSL=$(WITH_OPENSSL)

EXTRA_CMAKE_FLAGS += -DWITH_PerlDev=$(WITH_PERL)
EXTRA_CMAKE_FLAGS += -DWITH_TCLDev=$(WITH_TCL)
EXTRA_CMAKE_FLAGS += -DWITH_Zeroconf=$(WITH_ZEROCONF)

EXTRA_CMAKE_FLAGS += -DWITH_TESTS=$(WITH_TESTS)

### generic flags
ifneq ($(CFLAGS),)
EXTRA_CMAKE_FLAGS += -DCMAKE_C_FLAGS="$(CFLAGS)"
endif

ifneq ($(PREFIX),)
CMAKE_PREFIX = -DCMAKE_INSTALL_PREFIX="$(PREFIX)"
endif


ifneq ($(CMAKE_VERBOSE_MAKEFILE),)
EXTRA_CMAKE_FLAGS += -DCMAKE_VERBOSE_MAKEFILE=$(CMAKE_VERBOSE_MAKEFILE)
endif
