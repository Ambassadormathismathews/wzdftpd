#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

VARIANTS=notls tls dev

CFLAGS = -Wall

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

CFGFLAGS_tls = $(CFGFLAGS) --enable-ssl

build: build-stamp

build-stamp: $(foreach v,$(VARIANTS),build-stamp-$(v))
	dh_testdir

#	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info --sysconfdir=/etc

	# Add here commands to compile the package.
#	$(MAKE)
	#/usr/bin/docbook-to-man debian/wzdftpd.sgml > wzdftpd.1

	touch build-stamp

build-stamp-dev:
	echo "---- Building wzdftpd-dev ----"
	touch $@

build-stamp-%:
	dh_testdir

	echo "---- Building wzdftpd-$(*) ----"

	-$(MAKE) clean
	./configure $(CFGFLAGS_$(*)) --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info --sysconfdir=/etc

	# Add here commands to compile the package.
	$(MAKE)
	#/usr/bin/docbook-to-man debian/wzdftpd.sgml > wzdftpd.1

	mv src/.libs/wzdftpd src/wzdftpd-$(*)
	mv src/.libs/libwzd.so src/libwzd-$(*).so

	touch $@

clean: $(foreach v,$(VARIANTS),clean-$(v))
	dh_testdir
	dh_testroot
	rm -f build-stamp*

	# Add here commands to clean up after the build process.
#	-$(MAKE) distclean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif

	dh_clean

clean-%:
	for x in preinst postinst postrm menu mime install dirs links ; do \
	  rm -f debian/wzdftpd-$*.$$x ;\
	done

install: build
install: install-stamp

install-stamp: DH_OPTIONS=
install-stamp: $(foreach v,$(VARIANTS),install-stamp-$(v))
#	dh_testdir
#	dh_testroot
#	dh_clean -k
#	dh_installdirs

	# Add here commands to install the package into debian/wzdftpd.
#	$(MAKE) install DESTDIR=$(CURDIR)/debian/wzdftpd

install-stamp-dev: DH_OPTIONS=-pwzdftpd-dev
install-stamp-dev: DESTDIR=$(PWD)/debian/wzdftpd-dev
install-stamp-dev:

	dh_testdir
	dh_testroot
	dh_clean -k -Xwzd
	dh_installdirs

	install -d $(CURDIR)/debian/wzdftpd-dev/usr/include/wzdftpd;
	install $(CURDIR)/src/*.h $(CURDIR)/debian/wzdftpd-dev/usr/include/wzdftpd

	# Add here commands to install the package into debian/wzdftpd.
#	$(MAKE) install DESTDIR=$(CURDIR)/debian/wzdftpd-$*
#
#	# The following lines move the tls version of site* tools to create a separate package
#	if [ "$(*)" = "tls" ]; then \
#	  install -d $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
#	  install $(CURDIR)/debian/wzdftpd-$*/usr/bin/siteconfig $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
#	  install $(CURDIR)/debian/wzdftpd-$*/usr/bin/siteuptime $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
#	  install $(CURDIR)/debian/wzdftpd-$*/usr/bin/sitewho $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
#	fi
#	rm -f $(CURDIR)/debian/wzdftpd-$*/usr/bin/site*
#
#	# mv init.d script from /usr/etc/init.d to /etc/init.d
#	mv $(CURDIR)/debian/wzdftpd-$*/usr/etc/init.d $(CURDIR)/debian/wzdftpd-$*/etc/

install-stamp-%: DH_OPTIONS=-pwzdftpd-$(*)
install-stamp-%: DESTDIR=$(PWD)/debian/wzdftpd-$(*)
install-stamp-%:

	mv src/wzdftpd-$(*) src/.libs/wzdftpd
	mv src/libwzd-$(*).so src/.libs/libwzd.so

	dh_testdir
	dh_testroot
	dh_clean -k -Xwzd
	dh_installdirs

	# Add here commands to install the package into debian/wzdftpd.
	$(MAKE) install DESTDIR=$(CURDIR)/debian/wzdftpd-$*

	# The following lines move the tls version of site* tools to create a separate package
	if [ "$(*)" = "tls" ]; then \
	  install -d $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
	  install $(CURDIR)/debian/wzdftpd-$*/usr/bin/siteconfig $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
	  install $(CURDIR)/debian/wzdftpd-$*/usr/bin/siteuptime $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
	  install $(CURDIR)/debian/wzdftpd-$*/usr/bin/sitewho $(CURDIR)/debian/wzdftpd-tools/usr/bin; \
	fi
	rm -f $(CURDIR)/debian/wzdftpd-$*/usr/bin/site*

	# mv init.d script from /usr/etc/init.d to /etc/init.d
	mv $(CURDIR)/debian/wzdftpd-$*/usr/etc/init.d $(CURDIR)/debian/wzdftpd-$*/etc/


# Build architecture-independent files here.
binary-indep: DH_OPTIONS=-i
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: DH_OPTIONS=-a
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
